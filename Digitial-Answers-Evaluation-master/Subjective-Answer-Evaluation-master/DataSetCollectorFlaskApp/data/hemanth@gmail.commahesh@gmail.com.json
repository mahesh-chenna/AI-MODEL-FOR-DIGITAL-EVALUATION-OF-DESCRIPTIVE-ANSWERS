{
    "a1": "Encapsulation is an object-oriented programming concept that binds together the data and functions that manipulate the data, and that keeps both safe from outside interference and misuse.Data encapsulation led to the important OOP concept of data hiding. If a class does not allow calling code to access internal object data and permits access through methods only, this is a strong form of abstraction or information hiding known as encapsulation. Data encapsulation is a mechanism of bundling the data, and the functions that use them and data abstraction is a mechanism of exposing only the interfaces and hiding the implementation details from the user. Abstraction and encapsulation are complementary concepts: abstraction focuses on the observable behavior of an object. encapsulation focuses upon the implementation that gives rise to this behavior. encapsulation is most often achieved through information hiding, which is the process of hiding all of the secrets of object that do not contribute to its essential characteristics. ",
    "a2": "Asymptotic Notations are languages that allow us to analyze an algorithm's running time by identifying its behavior as the input size for the algorithm increases.",
    "a3": "Polymorphism means to process objects differently based on their data type.     In other words it means, one method with multiple implementation, for a certain class of action. And     which implementation to be used is decided at runtime depending upon the situation (i.e., data type of     the object)     This can be implemented by designing a generic interface, which provides generic methods for a certain     class of action and there can be multiple classes, which provides the implementation of these generic     methods.     In object-oriented programming, polymorphism refers to a programming language&#39;s ability to process     objects differently depending on their data type or class. More specifically, it is the ability to redefine     methods for derived classes. 1)\u00a0Static Polymorphism\u00a0also known as compile time polymorphism - Polymorphism that is resolved     during compiler time is known as static polymorphism. Method overloading is an example of compile     time polymorphism.   ",
    "email": "hemanth@gmail.com"
}